// gulp 
1、安装gulp
2、配置package.json
 需要配置很多
    "server:dev": "cross-env NODE_ENV=development gulp",
    "server:prod": "",
    "server:lint": "",
引入了shell.js
建立scrips/server下面一系列的玩意
3、安装scripty， 自动的去找写的脚本
4、sudo chmod -R a+x scripts 给予scirpts目录权限
5、 安装 gulp-babel 编译es6语法
5、安装 gulp-watch 监控开发环境的
5、流清理 安装 gulp-rollup
    config文件里面很多东西都不需要了， treeshaking帮我们解决
6、系统默认的环境变量我们去使
    npm run env 查看哪些可以使用的
    cross-var 不同系统下面的声明变量
7、package.json 的生命周期
8、husky本地代码hint
9、流清洗使用rollup只清洗掉了无用代码， 没有清晰多余的逻辑判断

webpack.config.js

1.划分文件目录
    webapp
        components/
        views
            views/common
            views/books
2. 在webpack.config.js中配置 寻找entry
3. 对于不需要处理的模版， 使用copy-webpack-plugin 直接塞到编译后的目录后， common目录， conponents目录
4. 使用pjax 拦截a ， 进行局部刷新

第四阶段：
1. 装webpack-livereload-plugin ，多页加载自动更新，浏览器也装一个hotreload  单页面， hotreload
2. 写htmlAfterWebpackPlugin， 拦截最后生成的html， 注入js
3. 引入x-tag， 刷新 ssr， 站内切页 csr
4. 用了x-tag， 站内切js没有带回来， 用preloadjs
5. 业务js不要每次都去请求， 使用 loaclstorage进行管理
    涉及版本控制， 使用webpack-manifest-plugin进行控制







